<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--声明/定义Bean-->
    <bean id="orderDaoBean" class="com.byonecup.spring6.dao.OrderDao"/>

    <bean id="orderServiceBean" class="com.byonecup.spring6.service.OrderService">
        <!--使用ref属性来引入，这就是注入外部Bean-->
        <property name="orderDao" ref="orderDaoBean"/>
    </bean>

    <bean id="orderServiceBean2" class="com.byonecup.spring6.service.OrderService">
        <property name="orderDao">
            <!--在property标签中使用嵌套的bean标签，这就是内部Bean-->
            <bean class="com.byonecup.spring6.dao.OrderDao"/>
        </property>
    </bean>

    <!--注入简单类型-->
    <bean id="userBean" class="com.byonecup.spring6.bean.User">
        <!--重点：如果给简单类型赋值，就不能使用ref了，就需要使用value-->
        <property name="username" value="张三"/>
        <property name="password" value="123"/>
        <property name="age" value="20"/>
    </bean>

    <!--测试哪些类型是简单类型-->
    <bean id="svtBean" class="com.byonecup.spring6.bean.SimpleValueType">
        <property name="age" value="20"/>
        <property name="age2" value="20"/>
        <property name="username" value="zhangsan"/>
        <property name="season" value="SPRING"/>
        <property name="flag" value="false"/>
        <property name="flag2" value="true"/>
        <property name="c" value="男"/>
        <property name="c2" value="女"/>
        <property name="clazz" value="java.lang.String"/>
        <!--如果要给Date当简单类型赋值，格式有要求-->
        <!--实际开发中，一般不把Date当做简单类型，一般采用ref给Date类型的属性赋值-->
        <property name="birth" value="Wed Nov 16 21:35:30 CST 2022"/>
    </bean>

    <!--让Spring来管理我们的数据源-->
    <bean id="myDataSource" class="com.byonecup.spring6.jdbc.MyDataSource">
        <property name="driver" value="com.mysql.cj.jdbc.Drive"/>
        <property name="url" value="jdbc:mysql://localhost:3306/spring6"/>
        <property name="username" value="root"/>
        <property name="password" value="000000"/>
    </bean>

    <bean id="catBean" class="com.byonecup.spring6.bean.Cat">
        <!--不给属性注入，属性的默认值就是null-->
        <!--        <property name="name" value="tom"></property>-->
        <!--这不是注入null，这只是注入了一个"null"字符串-->
        <!--        <property name="name" value="null"></property>-->
        <!--这种方式是手动注入null-->
        <!--        <property name="name">-->
        <!--            <null/>-->
        <!--        </property>-->
        <!--注入空字符串第一种方式-->
        <!--        <property name="name" value=""></property>-->
        <!--注入空字符串第二种方式-->
        <property name="name">
            <value/>
        </property>
        <property name="age" value="3"></property>
    </bean>

    <bean id="mathBean" class="com.byonecup.spring6.bean.MathBean">
        <!--第一种方案：使用实体符号代替特殊符号
            >	&gt;
            <	&lt;
            '	&apos;
            "	&quot;
            &	&amp;
        -->
        <!--        <property name="result" value="2 &lt; 3"/>-->
        <!--第二种方案：使用<![CDATA[]]>-->
        <property name="result">
            <!--只能使用value标签-->
            <value><![CDATA[2 < 3]]></value>
        </property>
    </bean>
</beans>